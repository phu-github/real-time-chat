[{"D:\\Project Reactjs\\Real-time\\real-time-chat\\src\\index.js":"1","D:\\Project Reactjs\\Real-time\\real-time-chat\\src\\reportWebVitals.js":"2","D:\\Project Reactjs\\Real-time\\real-time-chat\\src\\App.js":"3","D:\\Project Reactjs\\Real-time\\real-time-chat\\src\\components\\Login\\index.jsx":"4","D:\\Project Reactjs\\Real-time\\real-time-chat\\src\\firebase\\config.js":"5","D:\\Project Reactjs\\Real-time\\real-time-chat\\src\\components\\ChatRoom\\index.jsx":"6","D:\\Project Reactjs\\Real-time\\real-time-chat\\src\\Context\\AuthProvider.js":"7","D:\\Project Reactjs\\Real-time\\real-time-chat\\src\\components\\ChatRoom\\_UserInfo.js":"8","D:\\Project Reactjs\\Real-time\\real-time-chat\\src\\components\\ChatRoom\\_RoomList.js":"9","D:\\Project Reactjs\\Real-time\\real-time-chat\\src\\components\\ChatRoom\\SideBar.jsx":"10","D:\\Project Reactjs\\Real-time\\real-time-chat\\src\\components\\ChatRoom\\ChatWindow.jsx":"11","D:\\Project Reactjs\\Real-time\\real-time-chat\\src\\components\\ChatRoom\\_Message.js":"12","D:\\Project Reactjs\\Real-time\\real-time-chat\\src\\firebase\\services.js":"13","D:\\Project Reactjs\\Real-time\\real-time-chat\\src\\hooks\\useFireStore.js":"14","D:\\Project Reactjs\\Real-time\\real-time-chat\\src\\Context\\AppProvider.js":"15","D:\\Project Reactjs\\Real-time\\real-time-chat\\src\\components\\Modals\\AddRoomModal.js":"16"},{"size":500,"mtime":499162500000,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":869,"mtime":1629101944847,"results":"20","hashOfConfig":"18"},{"size":2268,"mtime":1627289182025,"results":"21","hashOfConfig":"18"},{"size":946,"mtime":1627288225766,"results":"22","hashOfConfig":"18"},{"size":380,"mtime":1626256585535,"results":"23","hashOfConfig":"18"},{"size":1370,"mtime":1627291215627,"results":"24","hashOfConfig":"18"},{"size":1493,"mtime":1627291656403,"results":"25","hashOfConfig":"18"},{"size":1565,"mtime":1629196311097,"results":"26","hashOfConfig":"18"},{"size":563,"mtime":1626455039923,"results":"27","hashOfConfig":"18"},{"size":6348,"mtime":1629452067352,"results":"28","hashOfConfig":"18"},{"size":1173,"mtime":1626455903911,"results":"29","hashOfConfig":"18"},{"size":257,"mtime":1629107546956,"results":"30","hashOfConfig":"18"},{"size":1247,"mtime":1627556909331,"results":"31","hashOfConfig":"18"},{"size":1263,"mtime":1629196666668,"results":"32","hashOfConfig":"18"},{"size":1674,"mtime":1629187290586,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"v1i91s",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},"D:\\Project Reactjs\\Real-time\\real-time-chat\\src\\index.js",[],["73","74"],"D:\\Project Reactjs\\Real-time\\real-time-chat\\src\\reportWebVitals.js",[],"D:\\Project Reactjs\\Real-time\\real-time-chat\\src\\App.js",[],"D:\\Project Reactjs\\Real-time\\real-time-chat\\src\\components\\Login\\index.jsx",["75","76"],"import React from 'react';\r\nimport { Row, Col, Button, Typography } from 'antd';\r\nimport firebase, { auth, db } from '../../firebase/config';\r\nimport { useHistory } from \"react-router\";\r\nimport {addDocument} from '../../firebase/services';\r\n\r\nconst {Title} = Typography;\r\nconst fbProvider = new firebase.auth.FacebookAuthProvider();\r\n\r\nexport default function Login() {\r\n    let history = useHistory();\r\n    console.log(history);\r\n\r\n    // Nhấn nút đăng nhập bằng Facebook\r\n    const handleFbLogin = async () =>{\r\n        const {additionalUserInfo, user} = await auth.signInWithPopup(new firebase.auth.FacebookAuthProvider()); \r\n        // Nếu là người đăng nhập mới thì add dữ liệu vào  store database\r\n        console.log(\"additionalUserInfo\", additionalUserInfo);\r\n        console.log(\"user\", user);\r\n        if(additionalUserInfo?.isNewUser){\r\n            // db.collection('users').add({\r\n            //     displayName: user.displayName,\r\n            //     email: user.email,\r\n            //     photoURL: user.photoURL,\r\n            //     uid: user.displayName,\r\n            //     providerId: additionalUserInfo.providerId\r\n            // })\r\n            // console.log('chạy ổn mà');\r\n            addDocument(\r\n                'users', \r\n                {\r\n                    displayName: user.displayName,\r\n                    email: user.email,\r\n                    photoURL: user.photoURL,\r\n                    uid: user.displayName,\r\n                    providerId: additionalUserInfo.providerId\r\n                }\r\n            )\r\n        }\r\n    };\r\n    auth.onAuthStateChanged((user) =>{\r\n        console.log({user});\r\n\r\n        // nếu login thành công sẽ chuyển hướng đến trang khác\r\n        if(user){\r\n            history.push(\"/\");\r\n        }\r\n    });\r\n    return (\r\n        <div>\r\n            <Row >\r\n                <Title level={3}>Chat for fun</Title>\r\n                <Col span={8}>\r\n                    <Button>Đăng nhập bằng GOOGLE</Button>\r\n                </Col>\r\n                <Col>\r\n                    <Title></Title>\r\n                    <Button onClick={handleFbLogin}>Đăng nhập bằng FACEBOOK</Button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n","D:\\Project Reactjs\\Real-time\\real-time-chat\\src\\firebase\\config.js",[],"D:\\Project Reactjs\\Real-time\\real-time-chat\\src\\components\\ChatRoom\\index.jsx",[],"D:\\Project Reactjs\\Real-time\\real-time-chat\\src\\Context\\AuthProvider.js",["77"],"import React, { useState } from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport firebase, { auth } from '../firebase/config';\r\nimport { Spin } from 'antd';\r\n\r\nexport const AuthContext = React.createContext()\r\nfunction AuthProvider({ children }) {\r\n    const history = useHistory();\r\n    const [user, setUser] = useState({});\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    // Khi đăng nhập nó sẽ get dữ liệu về và truyền vào Context API : user\r\n    React.useEffect(()=>{\r\n        const unsubscribed = auth.onAuthStateChanged((user)=>{\r\n            console.log({user});\r\n            if(user){\r\n                const {displayName, email, uid, photoURL} = user;\r\n                setUser({\r\n                    displayName,\r\n                    email, \r\n                    uid,\r\n                    photoURL\r\n                });\r\n                setIsLoading(false);\r\n                history.push('/');\r\n                return;\r\n            }\r\n            setIsLoading(false);\r\n            history.push('/login');\r\n        });\r\n        // cleanup function\r\n        return ()=>{\r\n            unsubscribed(); \r\n        }\r\n    },[history]);\r\n \r\n    return (\r\n        <AuthContext.Provider value={{ user }}>\r\n            {isLoading ? <Spin /> : children}\r\n        </AuthContext.Provider> \r\n    );\r\n}\r\n\r\nexport default AuthProvider;","D:\\Project Reactjs\\Real-time\\real-time-chat\\src\\components\\ChatRoom\\_UserInfo.js",["78","79","80","81","82","83"],"import React, { useContext, useEffect } from 'react';\r\nimport {Row, Col, Button ,Avatar, Typography} from 'antd'\r\nimport styled from 'styled-components';\r\nimport {auth, db} from '../../firebase/config';\r\nimport { AuthContext } from '../../Context/AuthProvider';\r\n\r\nconst WapperUserInfo = styled.div`\r\n    display: flex;\r\n    justify-content : space-between;\r\n    padding : 15px 15px;\r\n    \r\n    .username{\r\n        color: white;\r\n        padding-left: 5px;\r\n    }\r\n`;\r\n\r\nexport default function UserInfo() {\r\n    // useEffect(()=>{\r\n    //     db.collection('users').onSnapshot((snapshot)=>{\r\n    //         // Convert dữ liệu firebase sang javascript\r\n    //         const data = snapshot.docs.map((doc)=>({\r\n    //             ...doc.data(),\r\n    //             id: doc.id\r\n    //         }));\r\n    //         console.log({data, snapshot, docs: snapshot.docs })\r\n    //     });\r\n    // },[])\r\n\r\n    // cách lấy sâu dữ liệu của 1 object\r\n    const {user: {\r\n        displayName, \r\n        email,\r\n        photoURL,\r\n        uid\r\n    }} = useContext(AuthContext);\r\n\r\n\r\n    return (\r\n        <WapperUserInfo>\r\n                <div>\r\n                    <Avatar src={photoURL}>{photoURL ? '' : displayName?.charAt(0)?.toUpperCase()}</Avatar>\r\n                    <Typography.Text className=\"username\">{displayName}</Typography.Text>\r\n                </div>\r\n                <Button ghost onClick={()=> auth.signOut()}>Đăng Xuất</Button>\r\n        </WapperUserInfo>\r\n    );\r\n}\r\n ","D:\\Project Reactjs\\Real-time\\real-time-chat\\src\\components\\ChatRoom\\_RoomList.js",[],"D:\\Project Reactjs\\Real-time\\real-time-chat\\src\\components\\ChatRoom\\SideBar.jsx",[],"D:\\Project Reactjs\\Real-time\\real-time-chat\\src\\components\\ChatRoom\\ChatWindow.jsx",[],"D:\\Project Reactjs\\Real-time\\real-time-chat\\src\\components\\ChatRoom\\_Message.js",[],"D:\\Project Reactjs\\Real-time\\real-time-chat\\src\\firebase\\services.js",[],"D:\\Project Reactjs\\Real-time\\real-time-chat\\src\\hooks\\useFireStore.js",["84","85"],"import React, { useEffect, useState } from 'react';\r\nimport {auth, db} from '../firebase/config';\r\n\r\n\r\n const  useFireStore = (collection, condition ) => {\r\n    const [documents, setDocument] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        let collectionRef = db.collection(collection).orderBy('created_at');\r\n        \r\n        //condition\r\n        /*\r\n            fieldName:'abc'\r\n            operator: '=='\r\n            compareValue: 'abc' \r\n         */\r\n        if (condition) {\r\n            // Check nếu n\r\n            if(!condition.compareValue || !condition.compareValue.length){\r\n                return;\r\n            }\r\n            collectionRef = collectionRef.where(\r\n                condition.fieldName,\r\n                condition.operator,\r\n                condition.compareValue )\r\n        }\r\n\r\n        const unsubscribed = collectionRef.onSnapshot((snapshot)=>{\r\n            const documents = snapshot.docs.map((doc)=>({\r\n                ...doc.data(),\r\n                id: doc.id,\r\n            }))\r\n            setDocument(documents);\r\n            console.log('========= documents ',documents);\r\n        });\r\n\r\n        return unsubscribed; \r\n    },[collection, condition]);\r\n    return documents;\r\n}\r\n\r\nexport default useFireStore;","D:\\Project Reactjs\\Real-time\\real-time-chat\\src\\Context\\AppProvider.js",["86","87","88","89"],"import React, { useContext, useMemo, useState } from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport firebase, { auth } from '../firebase/config';\r\nimport { Spin } from 'antd';\r\nimport { AuthContext } from './AuthProvider';\r\nimport useFireStore from '../hooks/useFireStore';\r\n\r\nexport const AppContext = React.createContext()\r\n\r\nexport default function AppProvider({ children }) {\r\n    const [isAddRoomVisible, setIsAddRoomVisible ] = useState(false);\r\n    const [selectedRoomId, setSelectedRoomId] = useState('');\r\n\r\n    console.log(\"=====isAddRoomVisible = \", isAddRoomVisible);\r\n    const {user: {uid}} = useContext(AuthContext); \r\n    /* \r\n    name: room-name,\r\n    description: 'mo ta',\r\n    member: [uid1, uid3, uid3,...]\r\n     */\r\n    const roomsCondition = useMemo(()=>{\r\n        return {\r\n            fieldName: 'members',\r\n            operator: 'array-contains',\r\n            compareValue: uid\r\n        }\r\n    },[uid]);\r\n    const rooms = useFireStore('rooms', roomsCondition);\r\n\r\n    console.log('=========== rooms', rooms);\r\n    \r\n    return (\r\n        <AppContext.Provider value={{ rooms, isAddRoomVisible, setIsAddRoomVisible, selectedRoomId, setSelectedRoomId }}>\r\n            {children}\r\n        </AppContext.Provider> \r\n    );\r\n}\r\n","D:\\Project Reactjs\\Real-time\\real-time-chat\\src\\components\\Modals\\AddRoomModal.js",["90"],"import {Modal, Form, Input} from 'antd';\r\nimport React, { useContext, useState } from 'react';\r\nimport { AppContext } from '../../Context/AppProvider';\r\nimport { AuthContext } from '../../Context/AuthProvider';\r\nimport { addDocument } from '../../firebase/services';\r\n\r\nfunction AddRoomModal(props) {\r\n    const {isAddRoomVisible, setIsAddRoomVisible} = useContext(AppContext);\r\n    const {\r\n        user: { uid },\r\n    } = useContext(AuthContext);\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const handleOk = ()=> {\r\n        // Thêm phòng mới vào firestore\r\n        console.log('======= uid :', uid);\r\n        console.log({formData: form.getFieldValue() });\r\n        addDocument('rooms', { ...form.getFieldValue(), members: [uid] });\r\n\r\n        // Reset Fields\r\n        form.resetFields();\r\n        setIsAddRoomVisible(false);\r\n    }\r\n    const handleCancel= () => {\r\n        form.resetFields();\r\n        setIsAddRoomVisible(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal \r\n                title=\"Tạo Phòng\" \r\n                visible={isAddRoomVisible} \r\n                onOk={handleOk} \r\n                onCancel={handleCancel}\r\n            >\r\n                <Form form={form} layout='vertical'>\r\n                    <Form.Item label='Tên Phòng' name='name'>\r\n                        <Input placeholder='Nhập tên phòng'/>\r\n                    </Form.Item>\r\n                    <Form.Item label='Mô tả' name='description'>\r\n                        <Input.TextArea placeholder='Nhập mô tả'/>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddRoomModal;",{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":3,"column":26,"nodeType":"97","messageId":"98","endLine":3,"endColumn":28},{"ruleId":"95","severity":1,"message":"99","line":8,"column":7,"nodeType":"97","messageId":"98","endLine":8,"endColumn":17},{"ruleId":"95","severity":1,"message":"100","line":3,"column":8,"nodeType":"97","messageId":"98","endLine":3,"endColumn":16},{"ruleId":"95","severity":1,"message":"101","line":1,"column":29,"nodeType":"97","messageId":"98","endLine":1,"endColumn":38},{"ruleId":"95","severity":1,"message":"102","line":2,"column":9,"nodeType":"97","messageId":"98","endLine":2,"endColumn":12},{"ruleId":"95","severity":1,"message":"103","line":2,"column":14,"nodeType":"97","messageId":"98","endLine":2,"endColumn":17},{"ruleId":"95","severity":1,"message":"96","line":4,"column":15,"nodeType":"97","messageId":"98","endLine":4,"endColumn":17},{"ruleId":"95","severity":1,"message":"104","line":33,"column":9,"nodeType":"97","messageId":"98","endLine":33,"endColumn":14},{"ruleId":"95","severity":1,"message":"105","line":35,"column":9,"nodeType":"97","messageId":"98","endLine":35,"endColumn":12},{"ruleId":"95","severity":1,"message":"106","line":1,"column":8,"nodeType":"97","messageId":"98","endLine":1,"endColumn":13},{"ruleId":"95","severity":1,"message":"107","line":2,"column":9,"nodeType":"97","messageId":"98","endLine":2,"endColumn":13},{"ruleId":"95","severity":1,"message":"108","line":2,"column":9,"nodeType":"97","messageId":"98","endLine":2,"endColumn":19},{"ruleId":"95","severity":1,"message":"100","line":3,"column":8,"nodeType":"97","messageId":"98","endLine":3,"endColumn":16},{"ruleId":"95","severity":1,"message":"107","line":3,"column":20,"nodeType":"97","messageId":"98","endLine":3,"endColumn":24},{"ruleId":"95","severity":1,"message":"109","line":4,"column":10,"nodeType":"97","messageId":"98","endLine":4,"endColumn":14},{"ruleId":"95","severity":1,"message":"110","line":2,"column":29,"nodeType":"97","messageId":"98","endLine":2,"endColumn":37},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'db' is defined but never used.","Identifier","unusedVar","'fbProvider' is assigned a value but never used.","'firebase' is defined but never used.","'useEffect' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'email' is assigned a value but never used.","'uid' is assigned a value but never used.","'React' is defined but never used.","'auth' is defined but never used.","'useHistory' is defined but never used.","'Spin' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]