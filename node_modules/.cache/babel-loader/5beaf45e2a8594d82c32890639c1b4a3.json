{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Reactjs\\\\Real-time\\\\real-time-chat\\\\src\\\\Context\\\\AuthProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport firebase, { auth } from '../firebase/config';\nimport { Spin } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/React.createContext();\n\nfunction AuthProvider({\n  children\n}) {\n  _s();\n\n  const history = useHistory();\n  const [user, setUser] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  React.useEffect(() => {\n    const unsubscribed = auth.onAuthStateChanged(user => {\n      console.log({\n        user\n      });\n\n      if (user) {\n        const {\n          displayName,\n          email,\n          uid,\n          photoURL\n        } = user;\n        setUser({\n          displayName,\n          email,\n          uid,\n          photoURL\n        });\n        setIsLoading(false);\n        history.push('/');\n        return;\n      }\n\n      setIsLoading(false);\n      history.push('/login');\n    }); // cleanup function\n\n    return () => {\n      unsubscribed();\n    };\n  }, [history]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user\n    },\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 26\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AuthProvider, \"LwQgVhxPPOe+wvtzEp1mLMIAk70=\", false, function () {\n  return [useHistory];\n});\n\n_c = AuthProvider;\nexport default AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["D:/Project Reactjs/Real-time/real-time-chat/src/Context/AuthProvider.js"],"names":["React","useState","useHistory","firebase","auth","Spin","AuthContext","createContext","AuthProvider","children","history","user","setUser","isLoading","setIsLoading","useEffect","unsubscribed","onAuthStateChanged","console","log","displayName","email","uid","photoURL","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,QAAP,IAAmBC,IAAnB,QAA+B,oBAA/B;AACA,SAASC,IAAT,QAAqB,MAArB;;AAEA,OAAO,MAAMC,WAAW,gBAAGN,KAAK,CAACO,aAAN,EAApB;;AACP,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AAAA;;AAChC,QAAMC,OAAO,GAAGR,UAAU,EAA1B;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,IAAD,CAA1C;AAEAD,EAAAA,KAAK,CAACe,SAAN,CAAgB,MAAI;AAChB,UAAMC,YAAY,GAAGZ,IAAI,CAACa,kBAAL,CAAyBN,IAAD,IAAQ;AACjDO,MAAAA,OAAO,CAACC,GAAR,CAAY;AAACR,QAAAA;AAAD,OAAZ;;AACA,UAAGA,IAAH,EAAQ;AACJ,cAAM;AAACS,UAAAA,WAAD;AAAcC,UAAAA,KAAd;AAAqBC,UAAAA,GAArB;AAA0BC,UAAAA;AAA1B,YAAsCZ,IAA5C;AACAC,QAAAA,OAAO,CAAC;AACJQ,UAAAA,WADI;AAEJC,UAAAA,KAFI;AAGJC,UAAAA,GAHI;AAIJC,UAAAA;AAJI,SAAD,CAAP;AAMAT,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAJ,QAAAA,OAAO,CAACc,IAAR,CAAa,GAAb;AACA;AACH;;AACDV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAJ,MAAAA,OAAO,CAACc,IAAR,CAAa,QAAb;AACH,KAhBoB,CAArB,CADgB,CAkBhB;;AACA,WAAO,MAAI;AACPR,MAAAA,YAAY;AACf,KAFD;AAGH,GAtBD,EAsBE,CAACN,OAAD,CAtBF;AAwBA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF,KAA7B;AAAA,cACKE,SAAS,gBAAG,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAAH,GAAcJ;AAD5B;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAlCQD,Y;UACWN,U;;;KADXM,Y;AAoCT,eAAeA,YAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport firebase, { auth } from '../firebase/config';\r\nimport { Spin } from 'antd';\r\n\r\nexport const AuthContext = React.createContext()\r\nfunction AuthProvider({ children }) {\r\n    const history = useHistory();\r\n    const [user, setUser] = useState({});\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    React.useEffect(()=>{\r\n        const unsubscribed = auth.onAuthStateChanged((user)=>{\r\n            console.log({user});\r\n            if(user){\r\n                const {displayName, email, uid, photoURL} = user;\r\n                setUser({\r\n                    displayName,\r\n                    email, \r\n                    uid,\r\n                    photoURL\r\n                });\r\n                setIsLoading(false);\r\n                history.push('/');\r\n                return;\r\n            }\r\n            setIsLoading(false);\r\n            history.push('/login');\r\n        });\r\n        // cleanup function\r\n        return ()=>{\r\n            unsubscribed(); \r\n        }\r\n    },[history]);\r\n \r\n    return (\r\n        <AuthContext.Provider value={{ user }}>\r\n            {isLoading ? <Spin /> : children}\r\n        </AuthContext.Provider> \r\n    );\r\n}\r\n\r\nexport default AuthProvider;"]},"metadata":{},"sourceType":"module"}