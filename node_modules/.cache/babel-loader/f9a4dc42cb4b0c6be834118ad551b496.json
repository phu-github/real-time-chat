{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { auth, db } from '../firebase/config';\n\nconst useFireStore = (collection, condition) => {\n  _s();\n\n  const [documents, setDocument] = useState([]);\n  useEffect(() => {\n    let collectionRef = db.collection(collection).orderBy('created_at'); //condition\n\n    /*\r\n        fieldName:'abc'\r\n        operator: '=='\r\n        compareValue: 'abc' \r\n     */\n\n    if (collection) {\n      // Check nếu n\n      if (!condition.compareValue || !condtion.compareValue.length) {\n        return;\n      }\n\n      collectionRef.where(condition.fieldName, condition.operator, condition.compareValue);\n    }\n\n    const unsubscribed = collectionRef.onSnapshot(snapshot => {\n      const documents = snapshot.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      }));\n      setDocument(documents);\n      console.log('========= documents rooms: ', documents);\n    });\n    return () => {\n      unsubscribed();\n    };\n  }, [collection, condition]);\n};\n\n_s(useFireStore, \"Kab44WnoivDLd0NOLOqsKcJadtY=\");\n\nexport default useFireStore;","map":{"version":3,"sources":["D:/Project Reactjs/Real-time/real-time-chat/src/hooks/useFirestire.js"],"names":["React","useEffect","useState","auth","db","useFireStore","collection","condition","documents","setDocument","collectionRef","orderBy","compareValue","condtion","length","where","fieldName","operator","unsubscribed","onSnapshot","snapshot","docs","map","doc","data","id","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAAQC,IAAR,EAAcC,EAAd,QAAuB,oBAAvB;;AAGC,MAAOC,YAAY,GAAG,CAACC,UAAD,EAAaC,SAAb,KAA4B;AAAA;;AAC/C,QAAM,CAACC,SAAD,EAAYC,WAAZ,IAA2BP,QAAQ,CAAC,EAAD,CAAzC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIS,aAAa,GAAGN,EAAE,CAACE,UAAH,CAAcA,UAAd,EAA0BK,OAA1B,CAAkC,YAAlC,CAApB,CADU,CAGV;;AACA;AACR;AACA;AACA;AACA;;AACQ,QAAGL,UAAH,EAAc;AACV;AACA,UAAG,CAACC,SAAS,CAACK,YAAX,IAA2B,CAACC,QAAQ,CAACD,YAAT,CAAsBE,MAArD,EAA4D;AACxD;AACH;;AACDJ,MAAAA,aAAa,CAACK,KAAd,CACIR,SAAS,CAACS,SADd,EAEIT,SAAS,CAACU,QAFd,EAGIV,SAAS,CAACK,YAHd;AAIH;;AAED,UAAMM,YAAY,GAAGR,aAAa,CAACS,UAAd,CAA0BC,QAAD,IAAY;AACtD,YAAMZ,SAAS,GAAGY,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAmBC,GAAD,KAAQ,EACxC,GAAGA,GAAG,CAACC,IAAJ,EADqC;AAExCC,QAAAA,EAAE,EAAEF,GAAG,CAACE;AAFgC,OAAR,CAAlB,CAAlB;AAIAhB,MAAAA,WAAW,CAACD,SAAD,CAAX;AACAkB,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA0CnB,SAA1C;AACH,KAPoB,CAArB;AAQJ,WAAO,MAAI;AACPU,MAAAA,YAAY;AACf,KAFD;AAGC,GA/BQ,EA+BP,CAACZ,UAAD,EAAaC,SAAb,CA/BO,CAAT;AAgCH,CAnCA;;GAAOF,Y;;AAqCR,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {auth, db} from '../firebase/config';\r\n\r\n\r\n const  useFireStore = (collection, condition ) => {\r\n    const [documents, setDocument] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        let collectionRef = db.collection(collection).orderBy('created_at');\r\n        \r\n        //condition\r\n        /*\r\n            fieldName:'abc'\r\n            operator: '=='\r\n            compareValue: 'abc' \r\n         */\r\n        if(collection){\r\n            // Check nếu n\r\n            if(!condition.compareValue || !condtion.compareValue.length){\r\n                return;\r\n            }\r\n            collectionRef.where(\r\n                condition.fieldName,\r\n                condition.operator,\r\n                condition.compareValue )\r\n        }\r\n\r\n        const unsubscribed = collectionRef.onSnapshot((snapshot)=>{\r\n            const documents = snapshot.docs.map((doc)=>({\r\n                ...doc.data(),\r\n                id: doc.id,\r\n            }));\r\n            setDocument(documents);\r\n            console.log('========= documents rooms: ',documents);\r\n        });\r\n    return ()=>{\r\n        unsubscribed(); \r\n    }\r\n    },[collection, condition]);\r\n}\r\n\r\nexport default useFireStore;"]},"metadata":{},"sourceType":"module"}